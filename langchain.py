# -*- coding: utf-8 -*-
"""Langchain02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UloDQ3MUxOZUWpISoWGkykD_IVySYCwF
"""

!pip install langchain unstructured openai chromadb Cython tiktoken pypdf

import os
os.environ["OPENAI_API_KEY"] = "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"

# Mount Google Drive
from google.colab import drive
drive.mount('/content/gdrive', force_remount=True)
root_dir = "/content/gdrive/My Drive/"

pdf_folder_path = f'{root_dir}/ds sample resumes/'
print(os.listdir(pdf_folder_path))

# Define PDF folder path and load PDF documents
from langchain.document_loaders import PyPDFDirectoryLoader
loader = PyPDFDirectoryLoader(pdf_folder_path)
docs = loader.load()

# Import necessary packages
from langchain.document_loaders import PyPDFLoader
from langchain.embeddings import OpenAIEmbeddings
from langchain.vectorstores import Chroma
from langchain.chains import ConversationalRetrievalChain
from langchain.memory import ConversationBufferMemory
from langchain.llms import OpenAI

# Create document embeddings using OpenAI model
embeddings = OpenAIEmbeddings()
# Create a vector store (Chroma) from the documents
vectordb = Chroma.from_documents(docs, embedding=embeddings,
                                 persist_directory=".")
vectordb.persist()
# Initialize conversation memory
memory = ConversationBufferMemory(memory_key="chat_history", return_messages=True)
# Create a ConversationalRetrievalChain for Q&A using LangChain and OpenAI
pdf_qa = ConversationalRetrievalChain.from_llm(OpenAI(temperature=0.8) , vectordb.as_retriever(), memory=memory)

query = "how many resumes are there"
result = pdf_qa({"question": query})
print("Answer:")
result["answer"]

query = "which candidates have pyhton skill?"
result = pdf_qa({"question": query})
print("Answer:")
result["answer"]

query = "which candidates lives CA?"
result = pdf_qa({"question": query})
print("Answer:")
result["answer"]

query = "list a candidates who have work experiance of more than 5 years"
result = pdf_qa({"question": query})
print("Answer:")
result["answer"]

query = "who do you think is good in data visulization?"
result = pdf_qa({"question": query})
print("Answer:")
result["answer"]

query = "who have done the most projects?"
result = pdf_qa({"question": query})
print("Answer:")
result["answer"]

query = "give contact information of every candidates."
result = pdf_qa({"question": query})
print("Answer:")
result["answer"]

query = "Which applicant demonstrates a solid understanding of statistical analysis?"
result = pdf_qa({"question": query})
print("Answer:")
result["answer"]

